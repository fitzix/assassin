// Code generated by entc, DO NOT EDIT.

package hot

import (
	"github.com/fitzix/assassin/schema"
)

const (
	// Label holds the string label denoting the hot type in the database.
	Label = "hot"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHot holds the string denoting the hot vertex property in the database.
	FieldHot = "hot"
	// FieldView holds the string denoting the view vertex property in the database.
	FieldView = "view"

	// Table holds the table name of the hot in the database.
	Table = "hots"
	// AppTable is the table the holds the app relation/edge.
	AppTable = "hots"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// AppColumn is the table column denoting the app relation/edge.
	AppColumn = "app_hot"
)

// Columns holds all SQL columns for hot fields.
var Columns = []string{
	FieldID,
	FieldHot,
	FieldView,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Hot type.
var ForeignKeys = []string{
	"app_hot",
}

var (
	fields = schema.Hot{}.Fields()

	// descHot is the schema descriptor for hot field.
	descHot = fields[0].Descriptor()
	// DefaultHot holds the default value on creation for the hot field.
	DefaultHot = descHot.Default.(int)

	// descView is the schema descriptor for view field.
	descView = fields[1].Descriptor()
	// DefaultView holds the default value on creation for the view field.
	DefaultView = descView.Default.(int)
)
