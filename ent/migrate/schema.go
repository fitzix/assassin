// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/fitzix/assassin/ent/app"
	"github.com/fitzix/assassin/ent/hot"
	"github.com/fitzix/assassin/ent/user"
	"github.com/fitzix/assassin/ent/version"

	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "type", Type: field.TypeInt8, Default: app.DefaultType},
		{Name: "icon", Type: field.TypeString},
		{Name: "title", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "status", Type: field.TypeInt8, Default: app.DefaultStatus},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:        "apps",
		Columns:     AppsColumns,
		PrimaryKey:  []*schema.Column{AppsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "app_name_type_status_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{AppsColumns[4], AppsColumns[5], AppsColumns[8], AppsColumns[3]},
			},
		},
	}
	// CarouselsColumns holds the columns for the "carousels" table.
	CarouselsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "url", Type: field.TypeString},
		{Name: "app_carousels", Type: field.TypeInt, Nullable: true},
	}
	// CarouselsTable holds the schema information for the "carousels" table.
	CarouselsTable = &schema.Table{
		Name:       "carousels",
		Columns:    CarouselsColumns,
		PrimaryKey: []*schema.Column{CarouselsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "carousels_apps_carousels",
				Columns: []*schema.Column{CarouselsColumns[2]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "icon", Type: field.TypeString, Size: 50},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:        "categories",
		Columns:     CategoriesColumns,
		PrimaryKey:  []*schema.Column{CategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// HotsColumns holds the columns for the "hots" table.
	HotsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hot", Type: field.TypeInt, Default: hot.DefaultHot},
		{Name: "view", Type: field.TypeInt, Default: hot.DefaultView},
		{Name: "app_hot", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// HotsTable holds the schema information for the "hots" table.
	HotsTable = &schema.Table{
		Name:       "hots",
		Columns:    HotsColumns,
		PrimaryKey: []*schema.Column{HotsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "hots_apps_hot",
				Columns: []*schema.Column{HotsColumns[3]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hot_app_hot",
				Unique:  false,
				Columns: []*schema.Column{HotsColumns[3]},
			},
		},
	}
	// ProvidersColumns holds the columns for the "providers" table.
	ProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ProvidersTable holds the schema information for the "providers" table.
	ProvidersTable = &schema.Table{
		Name:        "providers",
		Columns:     ProvidersColumns,
		PrimaryKey:  []*schema.Column{ProvidersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 50},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:        "roles",
		Columns:     RolesColumns,
		PrimaryKey:  []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SourcesColumns holds the columns for the "sources" table.
	SourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "url", Type: field.TypeString},
		{Name: "secret", Type: field.TypeString, Nullable: true},
		{Name: "provider_sources", Type: field.TypeInt, Nullable: true},
		{Name: "version_sources", Type: field.TypeInt, Nullable: true},
	}
	// SourcesTable holds the schema information for the "sources" table.
	SourcesTable = &schema.Table{
		Name:       "sources",
		Columns:    SourcesColumns,
		PrimaryKey: []*schema.Column{SourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "sources_providers_sources",
				Columns: []*schema.Column{SourcesColumns[3]},

				RefColumns: []*schema.Column{ProvidersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "sources_versions_sources",
				Columns: []*schema.Column{SourcesColumns[4]},

				RefColumns: []*schema.Column{VersionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "source_provider_sources_version_sources",
				Unique:  false,
				Columns: []*schema.Column{SourcesColumns[3], SourcesColumns[4]},
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 50},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:        "tags",
		Columns:     TagsColumns,
		PrimaryKey:  []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 50},
		{Name: "password", Type: field.TypeString},
		{Name: "code", Type: field.TypeUint, Default: user.DefaultCode},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"normal", "abnormal"}, Default: user.DefaultStatus},
		{Name: "user_role", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_roles_role",
				Columns: []*schema.Column{UsersColumns[5]},

				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VersionsColumns holds the columns for the "versions" table.
	VersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "version", Type: field.TypeString},
		{Name: "size", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt8, Default: version.DefaultStatus},
		{Name: "app_versions", Type: field.TypeInt, Nullable: true},
	}
	// VersionsTable holds the schema information for the "versions" table.
	VersionsTable = &schema.Table{
		Name:       "versions",
		Columns:    VersionsColumns,
		PrimaryKey: []*schema.Column{VersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "versions_apps_versions",
				Columns: []*schema.Column{VersionsColumns[6]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "version_version_app_versions",
				Unique:  true,
				Columns: []*schema.Column{VersionsColumns[3], VersionsColumns[6]},
			},
		},
	}
	// AppTagsColumns holds the columns for the "app_tags" table.
	AppTagsColumns = []*schema.Column{
		{Name: "app_id", Type: field.TypeInt},
		{Name: "tag_id", Type: field.TypeInt},
	}
	// AppTagsTable holds the schema information for the "app_tags" table.
	AppTagsTable = &schema.Table{
		Name:       "app_tags",
		Columns:    AppTagsColumns,
		PrimaryKey: []*schema.Column{AppTagsColumns[0], AppTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "app_tags_app_id",
				Columns: []*schema.Column{AppTagsColumns[0]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "app_tags_tag_id",
				Columns: []*schema.Column{AppTagsColumns[1]},

				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AppCategoriesColumns holds the columns for the "app_categories" table.
	AppCategoriesColumns = []*schema.Column{
		{Name: "app_id", Type: field.TypeInt},
		{Name: "category_id", Type: field.TypeInt},
	}
	// AppCategoriesTable holds the schema information for the "app_categories" table.
	AppCategoriesTable = &schema.Table{
		Name:       "app_categories",
		Columns:    AppCategoriesColumns,
		PrimaryKey: []*schema.Column{AppCategoriesColumns[0], AppCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "app_categories_app_id",
				Columns: []*schema.Column{AppCategoriesColumns[0]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "app_categories_category_id",
				Columns: []*schema.Column{AppCategoriesColumns[1]},

				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AppsTable,
		CarouselsTable,
		CategoriesTable,
		HotsTable,
		ProvidersTable,
		RolesTable,
		SourcesTable,
		TagsTable,
		UsersTable,
		VersionsTable,
		AppTagsTable,
		AppCategoriesTable,
	}
)

func init() {
	CarouselsTable.ForeignKeys[0].RefTable = AppsTable
	HotsTable.ForeignKeys[0].RefTable = AppsTable
	SourcesTable.ForeignKeys[0].RefTable = ProvidersTable
	SourcesTable.ForeignKeys[1].RefTable = VersionsTable
	UsersTable.ForeignKeys[0].RefTable = RolesTable
	VersionsTable.ForeignKeys[0].RefTable = AppsTable
	AppTagsTable.ForeignKeys[0].RefTable = AppsTable
	AppTagsTable.ForeignKeys[1].RefTable = TagsTable
	AppCategoriesTable.ForeignKeys[0].RefTable = AppsTable
	AppCategoriesTable.ForeignKeys[1].RefTable = CategoriesTable
}
