// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"fmt"
	"io"
	"strconv"
)

type AppOrderBy string

const (
	AppOrderByHot        AppOrderBy = "HOT"
	AppOrderByUpdateDesc AppOrderBy = "UPDATE_DESC"
)

var AllAppOrderBy = []AppOrderBy{
	AppOrderByHot,
	AppOrderByUpdateDesc,
}

func (e AppOrderBy) IsValid() bool {
	switch e {
	case AppOrderByHot, AppOrderByUpdateDesc:
		return true
	}
	return false
}

func (e AppOrderBy) String() string {
	return string(e)
}

func (e *AppOrderBy) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = AppOrderBy(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid AppOrderBy", str)
	}
	return nil
}

func (e AppOrderBy) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
